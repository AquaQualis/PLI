 /* OSGetDateTime                                                   */
 /*******************************************************************/
 /*           Iron Spring PL/I Runtime Library Version 0.8          */
 /*              Distributed under the Gnu LGPL License             */
 /*                                                                 */
 /* Module:     OSGetDateTime    (PL/I Runtime, Linux)              */   
 /* Version:    1.0                                                 */
 /* Date:       Dec, 2009                                           */
 /* Author:     Peter Flass                                         */
 /*                                                                 */
 /* Function:   Get the current date and time.  For OS/2, call      */
 /*             DosGetDateTime, for Linux, use the sys_gettimeofday */
 /*             syscall and the offtime procedure.                  */
 /*                                                                 */
 /* Description: This procedure contains OS-dependent code to get   */
 /*             the current date and time-of-day.  The result is    */
 /*             returned in a 'tm' structure.                       */
 /*                                                                 */
 /* Calling sequence:                                               */
 /*             dcl 1 tm_struct like tm;                            */
 /*             dcl   uSec      fixed bin(31);                 0.9.5*/
 /*             call OSGetDateTime( addr(tm_struct), addr(uSec) );  */
 /*                                                                 */
 /* Modifications:                                                  */
 /*   2014-04-08: Correct calling sequence info.               0.9.5*/
 /*                                                                 */
 /*******************************************************************/

 OSGetDateTime: proc( ptm, pusec )           
		options( linkage(system) )
		ext( '_pli_OSGetDateTime' );
		    
 /*-------------------------*/
 /* Parameters              */
 /*-------------------------*/
 dcl      ptm                ptr;             /* addr(tm)           */
 dcl      pusec              ptr;             /* addr(microseconds) */

 /*-------------------------*/
 /* Automatic Storage       */
 /*-------------------------*/
 dcl     timeval          (2)fixed bin(31);
 dcl   1 timezone,
         5 tz_minuteswest    fixed bin(31),
         5 tz_dsttime        fixed bin(31);
 dcl rc                      fixed bin(31);
  

 /*-------------------------*/
 /* Prototypes              */
 /*-------------------------*/
 dcl   1 callers_tm          like tm        based(ptm);
 dcl     callers_usec        fixed bin(31)  based(pusec);
 
 /*-------------------------*/
 /* External Entries        */
 /*-------------------------*/
  %replace SYS_GETTIMEOFDAY by 78;
  dcl    syscall	     entry
  		             returns( fixed bin(31) )
		             options( linkage(system) )
		             ext( '_pli_Syscall' );
  dcl    offtime             entry( fixed bin(31),
                                    fixed bin(31), ptr )
                             ext( '_pli_Offtime' );

  /*----------------------------------*/
  /* Beginning of Procedure           */
  /*----------------------------------*/
  tz_minuteswest = 0;		       /* Use default timezone      */
  tz_dsttime = 1;		       /* DST applies to this locale*/
  rc = syscall( SYS_GETTIMEOFDAY, addr(timeval(1)), addr(timezone) );
  if rc<0 then signal error;
  call offtime( timeval(1), -timezone.tz_minuteswest*60, addr(callers_tm) );
  callers_usec = timeval(2);
  return;

  %include tm;

  end OSGetDateTime;
