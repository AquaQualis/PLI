Nov 15, 2024  20:05    /* preproc_test.pli -- PL/I Preprocessor test program                */                          
0.1.6                                              Insource Listing                                          Page 1     
    1 /* preproc_test.pli -- PL/I Preprocessor test program                */
    2 /*********************************************************************/
    3 /*            Iron Spring PL/I Compiler                              */
    4 /*            Preprocessor test program                              */
    5 /*                                                                   */
    6 /* Function: preproc_test does no useful work.                       */
    7 /*           Its purpose is to test all preprocessor statements.     */
    8 /*                                                                   */
    9 /*           No attempt is made to test possible error conditions.   */
   10 /*                                                                   */
   11 /*           Strictly speaking it does not have to be in the form    */
   12 /*           of a valid PL/I program. Any sequence of data not       */
   13 /*           containing '%' characters outside of PL/I comments      */
   14 /*           and character strings '...' or "..."                    */
   15 /*           is allowed, except that comments and character strings  */
   16 /*           must be properly terminated.                            */
   17 /*           (to code a '%', use two percents: '%%'.                 */
   18 /*                                                                   */
   19 /*********************************************************************/
   20 preproc_test: proc;
   21   /* Declare a couple of normal variables to code valid statements   */
   22   dcl     fixed               fixed bin(31);
   23   dcl     char                character(1024)     varying;
   24  
   25 % /* Preprocessor procedures. These can be placed anywhere in the  */
   26   /* source text.                                                  */
   27   /* Note on comments: Comments within preprocessor procedures or  */
   28   /* on preprocessor statements will not appear in the output text.*/ ;
   29  
   30 %add: proc(one,two,three) statement returns(fixed);
   31   dcl (one,two,three) fixed;
   32   if ¬parmset(one)   then note('Argument "one" missing',4);
   33   if ¬parmset(two)   then note('Argument "two" missing',4);
   34   if ¬parmset(three) then note('Argument "three" missing',4);
   35   return(one+two+three);
   36   %end add;
   37 %activate add;
   38  
   39 %declare char_p entry; 
   40 %char_p: proc(str) returns(char);
   41   dcl str character;
   42   note(str,0);
   43   return( comment(str) );
   44   %end char_p;
   45  
   46 % /* Declare some preprocessor variables                           */ ;
   47 %declare (alpha,beta,gamma) character;
   48 %declare (alef,beit,gimel)  fixed;
   49 %declare (quote,comment)    builtin;
   50 %declare (date,time)        builtin;
   51 %declare counter            builtin;
   52 %declare compiletime        builtin;
   53 %declare (index,length,substr)
   54                                     
   55  
   56   /* Preprocessor Type-3 DO-statement    */
   57   /* with ITERATE and LEAVE statements   */
Nov 15, 2024  20:05    /* preproc_test.pli -- PL/I Preprocessor test program                */                          
0.1.6                                              Insource Listing                                          Page 2     
   58   /* prints values 1,2,4,5,6             */
   59 %x: do alef=1 to 10;
   60   %do;
   61      %if alef=3 %then %iterate x;
   62   %end;     
   63   put skip list( quote(Do repetition alef) );
   64   %if alef=6 %then %leave;
   65   %end;
   66  
   67   /* Preprocessor procedure invocation   */       
   68   /* with both positional and keyword    */
   69   /* arguments                           */
   70   char = char_p(abc);
   71   /* Note the two ';' at then end of args for a statement proc */
   72   fixed = add(9,8,7);;   /* 9+8+7=24 */
   73   fixed = add(6,5);;   /* 6+5+0=11 */
   74   fixed = add one(1) two(2) three(3);;   /* 1+2+3=6  */
   75  
   76   /* Activate/Deactivate                                    */
   77   /* date and time builtins not defined in IBM preprocessor */
   78   %deactivate char_p;
   79   char = char_p(x);       /* does not invoke proc  */
   80   %activate char_p;
   81   char = char_p(y);     /* comment 'y' */
   82   %alpha = char_p(' This is a comment ');
   83   alpha
   84  
   85   /* Test builtins */
   86   put skip list(quote(compiletime)); /* compiletime */
   87   fixed  = counter;                      /* counter 1 */
   88   %alpha = counter                      /* counter 2 */ ;
   89   %alef  = length(alpha);
   90   put skip list('length of counter ' || quote(alpha) ' is' || alef); /* length */
   91   %alpha = 'abcdef';
   92   %beit  = index(alpha,'c');
   93   put skip list('index of c in ' || quote(alpha) ' is' || beit);    /* index */
   94   %beta = substr(alpha,3,2); 
   95   put skip list( quote(beta) );               /* substr('abcdef',3,2) */
   96  
   97   /* date and time builtins are not supported by IBM PL/I preprocessors */
   98   /* The following two statements will generate errors                  */
   99   char = quote(time); /* time */
  100   char = quote(date); /* date */
  101  
  102  
  103   end preproc_test;
  104  
        42 *** NOTE       0, abc 
        34 *** NOTE       4, Argument "three" missing 
        42 *** NOTE       0, y 
        42 *** NOTE       0,  This is a comment  
104 (INF1000)No preprocessor errors detected.
